version: "3"

services:
  work:
    build:
      context: ./work
      args:
        - WORK_USER=${WORK_USER}
        - HOST_USER_ID=${HOST_USER_ID}
        - HOST_GROUP_ID=${HOST_GROUP_ID}
        - DOMAIN=${DOMAIN}
    tty: true
    environment:
      - WORK_USER=${WORK_USER}
      - DOMAIN=${DOMAIN}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - CERTBOT_CLOUDFLARE_EMAIL=${CERTBOT_CLOUDFLARE_EMAIL}
      - CERTBOT_CLOUDFLARE_API=${CERTBOT_CLOUDFLARE_API}
    volumes:
      - ${PROJECT_PATH}:/var/www
      - ./data/certbot:/etc/letsencrypt
      - ./data/ssl:/etc/nginx-ssl

  php:
    build:
      context: ./php
      args:
          - WORK_USER=${WORK_USER}
    volumes:
      - ${PROJECT_PATH}:/var/www

  php8:
    image: nazmulpcc/php:8.0-fpm
    volumes:
      - ${PROJECT_PATH}:/var/www

  nodejs:
    build:
      context: ./nodejs
      args:
        - WORK_USER=${WORK_USER}
        - HOST_USER_ID=${HOST_USER_ID}
        - HOST_GROUP_ID=${HOST_GROUP_ID}
        - NODEJS_STARTUP=${NODEJS_STARTUP}
    volumes:
      - ${PROJECT_PATH}:/var/www

  nginx:
    build: 
      context: ./nginx
    volumes:
      - ./data/ssl:/etc/nginx/ssl
      - ${NGINX_SITES}:/etc/nginx/conf.d
      - ${PROJECT_PATH}:/var/www
    ports:
      - 80:80
      - 443:443
    depends_on:
      - php
      - work

  socket:
    build:
      context: ./socket
    volumes:
      - ./data/ssl:/etc/nginx/ssl
    ports:
      - 4000:4000
    depends_on:
      - php

  mysql:
    restart: unless-stopped
    build:
      context: ./mysql
      args: 
        - TIMEZONE=${TIMEZONE}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    ports:
      - ${MYSQL_PUBLIC_PORT}:3306
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  mongo:
    image: mongo:4.4.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - ${MONGO_PUBLIC_PORT}:27017
    volumes:
      - ./data/mongo:/data/db

  phpmyadmin:
    build:
      context: ./phpmyadmin
    environment:
      - PMA_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    depends_on:
      - mysql

  backup:
    build: 
      context: ./backup
    environment: 
      - BACKUP_FREQUENCY=${BACKUP_FREQUENCY}
      - BACKUP_KEEP=${BACKUP_KEEP}
      - MYSQL_USER=${BACKUP_MYSQL_USER}
      - MYSQL_PASSWORD=${BACKUP_MYSQL_PASSWORD}
    volumes:
      - ./data/backup:/var/backup
      - ./data/mysql:/var/lib/mysql
    depends_on: 
      - mysql

  redis:
    build:
      context: ./redis
